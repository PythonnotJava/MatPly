# Compiler
CC = gcc

# Compiler flags
CFLAGS = -fPIC
LDFLAGS = -shared

# Source files
SRCS = matply.c Auxiliary.c

# Object files
OBJS = $(SRCS:.c=.o)

# Detect platform
ifeq ($(OS),Windows_NT)
    OUTPUT = matply.dll
    LDFLAGS += -Wl,--out-implib,libmatply.a
else
    UNAME_S := $(shell uname -s)
    ifeq ($(UNAME_S),Linux)
        OUTPUT = matply.so
    else ifeq ($(UNAME_S),Darwin)
        OUTPUT = matply.dylib
    endif
endif

# Default target
all: $(OUTPUT)

# Rule to build the output library
$(OUTPUT): $(OBJS)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $^

# Rule to compile source files into object files
%.o: %.c
	$(CC) -c $(CFLAGS) -o $@ $<

# Clean rule
clean:
	rm -f $(OBJS) $(OUTPUT)

# Phony targets
.PHONY: all clean

# my orders : gcc -shared -o matply.dll  matply.c Auxiliary.c